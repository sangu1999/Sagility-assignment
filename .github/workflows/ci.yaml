name: CI  
on: [push]  
jobs:  
  build:  
    runs-on: ubuntu-latest  
    steps:  
      - name: Checkout code  
        uses: actions/checkout@v2  
  
      - name: Set up Python  
        uses: actions/setup-python@v2  
        with:  
          python-version: '3.10'  
  
      - name: Install dependencies  
        run: |  
          python -m pip install --upgrade pip  
          pip install -r requirements.txt  
  
      - name: Build application  
        run: |  
          # Add commands to compile or prepare the application for deployment  
          echo "Building the application..."  
  
      - name: Run tests with coverage  
        run: |  
          pip install pytest pytest-cov  
          pytest --cov=your_package_name --cov-report=term-missing > coverage_report.txt  
          coverage=$(grep -Po 'TOTAL.*\s+\K[0-9]+(?=%)' coverage_report.txt)  
          echo "Coverage: $coverage%"  
          if (( coverage < 100 )); then  
            echo "Test coverage is less than 100%. Failing the step."  
            exit 1  
          fi    
  
      - name: Lint code  
        run: |  
          pip install pylint  
          pylint **/*.py > pylint_report.txt || true  
          score=$(tail -n 2 pylint_report.txt | grep -Po 'Your code has been rated at \K[0-9.]+')  
          echo "Pylint score: $score"  
          if (( $(echo "$score < 5" | bc -l) )); then  
            echo "Pylint score is less than 5. Failing the step."  
            exit 1  
          fi  
  
      - name: Build Docker image  
        run: |  
          docker build -t simple-calculator:latest .  
  
      - name: Log in to Docker  
        run: |  
          docker login "${{ secrets.DOCKER_SERVER }}" -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
  
      - name: Push Docker image  
        run: |  
          docker tag simple-calculator:latest ${{ secrets.DOCKER_SERVER }}/simple-calculator:latest  
          docker push ${{ secrets.DOCKER_SERVER }}/simple-calculator:latest  
  
      - name: Update Kubernetes manifests  
        run: |  
          sed -i 's|image: .*$|image: ${{ secrets.DOCKER_SERVER }}/simple-calculator:latest|' k8s/deployment.yaml  
  
      - name: Commit and push updated manifests  
        run: |  
          git config --global user.name 'github-actions'  
          git config --global user.email 'github-actions@github.com'  
          git add k8s/deployment.yaml  
          git commit -m "Update image to ${{ secrets.DOCKER_SERVER }}/simple-calculator:latest"  
          git push  
  
      - name: Sync Argo CD application  
        env:  
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}  
          ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}  
          ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}  
          ARGOCD_APP_NAME: SimpleCalculator 
        run: |  
          # Install argocd CLI if not available  
          if ! command -v argocd &> /dev/null; then  
            curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/v2.0.4/argocd-linux-amd64  
            chmod +x /usr/local/bin/argocd  
          fi  
          # Log in to Argo CD  
          argocd login $ARGOCD_SERVER --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD --insecure  
          # Sync the application  
          argocd app sync $ARGOCD_APP_NAME  
